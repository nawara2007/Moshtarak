esphome:
  name: moshtarak
  friendly_name: Moshtarak

esp8266:
  board: esp01_1m

logger:
  baud_rate: 0  # Free the UART pins for Arduino comms

api:
  encryption:
    key: "mg9l5m4lzuXEOGAD6Uah8c1fG5U9CVO9ttmMq0N2w6g="

ota:
  - platform: esphome
    password: "cb850f0199bd075ed05cb7134b70f39d"

uart:
  tx_pin: GPIO1  # ESP-01 TX → Arduino RX
  rx_pin: GPIO3  # ESP-01 RX ← Arduino TX
  baud_rate: 9600

# Switches that send commands to Arduino
switch:
  - platform: template
    name: "LED 1"
    id: led1_switch
    turn_on_action:
      - uart.write: "LED1_ON\n"
    turn_off_action:
      - uart.write: "LED1_OFF\n"

  - platform: template
    name: "LED 2"
    id: led2_switch
    turn_on_action:
      - uart.write: "LED2_ON\n"
    turn_off_action:
      - uart.write: "LED2_OFF\n"

  - platform: template
    name: "LED 3"
    id: led3_switch
    turn_on_action:
      - uart.write: "LED3_ON\n"
    turn_off_action:
      - uart.write: "LED3_OFF\n"

  - platform: template
    name: "LED 4"
    id: led4_switch
    turn_on_action:
      - uart.write: "LED4_ON\n"
    turn_off_action:
      - uart.write: "LED4_OFF\n"

sensor:
  - platform: template
    name: "Arduino Temperature"
    id: temp_c
    unit_of_measurement: "°C"
    accuracy_decimals: 2
    update_interval: never
    device_class: temperature
    state_class: measurement

# Periodically check if Arduino sent LED status updates
interval:
  - interval: 200ms
    then:
      - lambda: |-
          while (Serial.available()) {
            String line = Serial.readStringUntil('\n');
            line.trim();
            
            if (line.startsWith("TEMP:")) {
              // Parse temperature
              float t = line.substring(5).toFloat();
              id(temp_c).publish_state(t);
            } 
            else if (line == "LED1_ON") id(led1_switch).publish_state(true);
            else if (line == "LED1_OFF") id(led1_switch).publish_state(false);
            else if (line == "LED2_ON") id(led2_switch).publish_state(true);
            else if (line == "LED2_OFF") id(led2_switch).publish_state(false);
            else if (line == "LED3_ON") id(led3_switch).publish_state(true);
            else if (line == "LED3_OFF") id(led3_switch).publish_state(false);
            else if (line == "LED4_ON") id(led4_switch).publish_state(true);
            else if (line == "LED4_OFF") id(led4_switch).publish_state(false);
          }

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "Moshtarak Fallback Hotspot"
    password: "08rr0RFcxPYC"

captive_portal:
